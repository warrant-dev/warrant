name: MySQL

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go env
        uses: actions/setup-go@v5
        with:
          go-version: "^1.23.0"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Build binary
        run: make build
        working-directory: cmd/warrant
      - name: Start & configure mysql
        run: |
          sudo systemctl start mysql
          mysql -e 'CREATE DATABASE warrant;' -uroot -proot
      - name: Install apirunner & go-migrate
        run: |
          go install github.com/warrant-dev/apirunner/cmd/apirunner@latest
          go install -tags 'mysql' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - name: Run datastore migrations 'up'
        run: migrate -path ./migrations/datastore/mysql/ -database mysql://root:root@/warrant up
      - name: Start test server
        id: start-server
        run: ./cmd/warrant/bin/warrant > server.log 2>&1 &
        env:
          WARRANT_AUTOMIGRATE: false
          WARRANT_PORT: 8000
          WARRANT_LOGLEVEL: 0
          WARRANT_ENABLEACCESSLOG: true
          WARRANT_AUTHENTICATION_APIKEY: warrant_api_key
          WARRANT_CHECK_CONCURRENCY: 4
          WARRANT_CHECK_MAXCONCURRENCY: 1000
          WARRANT_CHECK_TIMEOUT: 1m
          WARRANT_DATASTORE: mysql
          WARRANT_DATASTORE_MYSQL_DSN: root:root@tcp(127.0.0.1:3306)/warrant?parseTime=true
          WARRANT_DATASTORE_MYSQL_MAXIDLECONNECTIONS: 5
          WARRANT_DATASTORE_MYSQL_MAXOPENCONNECTIONS: 5
          WARRANT_DATASTORE_MYSQL_CONNMAXIDLETIME: 4h
          WARRANT_DATASTORE_MYSQL_CONNMAXLIFETIME: 6h
          WARRANT_DATASTORE_MYSQL_READERDSN: root:root@tcp(127.0.0.1:3306)/warrant?parseTime=true
          WARRANT_DATASTORE_MYSQL_READERMAXIDLECONNECTIONS: 5
          WARRANT_DATASTORE_MYSQL_READERMAXOPENCONNECTIONS: 5
      - name: Run apirunner tests
        run: |
          sleep 3
          apirunner tests/ '.*' tests/ci-apirunner.conf
      - name: Shutdown test server
        if: success() || (failure() && steps.start-server.outcome == 'success')
        run: kill -9 `lsof -i:8000 -t`
      - name: Run datastore migrations 'down'
        run: echo 'y' | migrate -path ./migrations/datastore/mysql/ -database mysql://root:root@/warrant down
      - name: Archive server log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: server-log
          path: server.log
          if-no-files-found: warn
          retention-days: 5
